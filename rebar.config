%% -*- erlang -*-
{erl_opts, [
    debug_info,
    {parse_transform, lager_transform}
    %% warnings_as_errors
]}.

{plugins, [
    {grpcbox_plugin, {git, "https://github.com/novalabsxyz/grpcbox_plugin.git", {branch, "andymck/ts-master/combined-opts-and-template-changes"}}},
    erlfmt
]}.

{cover_export_enabled, true}.

{cover_enabled, true}.

{covertool, [
    {coverdata_files, [
        "ct.coverdata",
        "eunit.coverdata"
    ]}
]}.

{deps, [
    {blockchain, {git, "https://github.com/helium/blockchain-core.git", {tag, "jg/follower_service"}}},
    {elli, "3.3.0"},
    jsone,
    {jsonrpc2, {git, "https://github.com/novalabsxyz/jsonrpc2-erlang.git", {branch, "master"}}},
    {observer_cli, "1.7.1"},
    pbkdf2
]}.

{xref_checks, [
    undefined_function_calls,
    undefined_functions
]}.

{shell, [
    {apps, [lager, grpc, grpcbox]}
]}.

{pre_hooks, [
    {"(linux|darwin|solaris)", compile, "make grpc"},
    {"(freebsd|openbsd|netbsd)", compile, "gmake grpc"},
    {"(linux|darwin|solaris)", clean, "make clean_grpc"},
    {"(freebsd|openbsd|netbsd)", clean, "gmake clean_grpc"}
]}.

{relx, [
    {release, {blockchain_node, git}, [
        blockchain_node
    ]},
    {vm_args, "./config/vm.args"},
    {sys_config, "./config/dev.config"},
    {extended_start_script, true},
    {include_src, true},
    {extended_start_script_hooks, [
        {post_start, [
            {wait_for_process, blockchain_worker}
        ]}
    ]},
    {extended_start_script_extensions, [
        {genesis, "extensions/genesis"},
        {info, "extensions/info"},
        {peer, "extensions/peer"},
        {ledger, "extensions/ledger"},
        {trace, "extensions/trace"},
        {snapshot, "extensions/snapshot"},
        {repair, "extensions/repair"},
        {txn, "extensions/txn"}
    ]},
    {overlay, [
        {copy, "config/sys.config", "config/sys.config"},
        {copy, "priv/genesis", "update/genesis"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/peer", "bin/extensions/peer"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/ledger",
            "bin/extensions/ledger"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/trace", "bin/extensions/trace"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/txn", "bin/extensions/txn"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/snapshot",
            "bin/extensions/snapshot"},
        {copy, "./_build/default/lib/blockchain/scripts/extensions/repair",
            "bin/extensions/repair"},
        {template, "config/vm.args", "{{output_dir}}/releases/{{release_version}}/vm.args"}
    ]}
]}.

{profiles, [
    {test, [
        {relx, [
            {sys_config, "./config/test.config"},
            {dev_mode, false},
            {include_erts, false},
            {include_src, false},
            {overrides, [{add, blockchain, [{erl_opts, [{d, 'TEST'}]}]}]},
            {deps, [
                {miner_test, {git, "https://github.com/helium/miner-test.git", {branch, "master"}}}
            ]}
        ]}
    ]},
    {dev, [
        {relx, [
            {sys_config, "./config/dev.config"},
            {dev_mode, true},
            {include_src, false},
            {include_erts, false}
        ]}
    ]},
    {dev_testnet, [
        {relx, [
            {sys_config, "./config/dev_testnet.config"},
            {dev_mode, true},
            {include_src, false},
            {include_erts, false},
            {overlay, [
                {copy, "priv/genesis_testnet", "update/genesis"}
            ]}
        ]}
    ]},
    {prod, [
        {relx, [
            {sys_config, "./config/prod.config"},
            {dev_mode, false},
            {include_src, false},
            {include_erts, true}
        ]}
    ]},
    {docker_node, [
        {relx, [
            {sys_config_src, "./config/docker_node.config.src"},
            {dev_mode, false},
            {include_erts, true}
        ]}
    ]},
    {docker_rosetta_testnet, [
        {relx, [
            {sys_config, "./config/docker_rosetta_testnet.config"},
            {dev_mode, false},
            {include_erts, false},
            {overlay, [
                {copy, "priv/genesis_testnet", "update/genesis"}
            ]}
        ]}
    ]},
    {docker_rosetta, [
        {relx, [
            {sys_config_src, "./config/docker_rosetta.config"},
            {dev_mode, false},
            {include_erts, true}
        ]}
    ]},
    {local, [
        {relx, [
            {sys_config, "./config/local.config"},
            {dev_mode, false},
            {include_src, false},
            {include_erts, false}
        ]}
    ]}
]}.
